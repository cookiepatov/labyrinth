{"version":3,"sources":["elements/Cell.js","elements/Field.js","utils/constants.js","utils/utils.js","store/actions/setPositionData.js","elements/Moves.js","App.js","store/reducers/setPositionData.js","store/store.js","index.js"],"names":["Cell","props","_x","x","_y","y","_type","type","_id","id","_getId","getId","_disabled","disabled","style","this","className","onClick","React","Component","Field","_parameters","parameters","_cols","cols","_rows","rows","state","clickedCell","result","getClicked","bind","setState","positions","cells","c","r","push","_positions","restartGame","createCells","connect","startingParameters","moves","calculateNextStepVariants","posId","slice","variants","maxY","getNextStep","direction","setPositionData","ids","payload","Moves","_maxMoves","startingStep","stepsData","finishStep","_setPositionData","reDraw","currentId","Math","floor","random","array","i","nextStep","length","map","item","index","renderSteps","App","setPositionDataReducer","action","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.09a2dc8f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default class Cell extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this._x = props.x;\r\n        this._y = props.y;\r\n        this._type = props.type;\r\n        this._id = props.id\r\n        this._getId = props.getId;\r\n        this._disabled = props.disabled ? true : false\r\n    }\r\n\r\n    render() {\r\n        const style = {'gridRow': this._y+1, 'gridColumn': this._x+1};\r\n        const className = this._type ? `cell ${this._type}` : `cell`;\r\n        return(\r\n            <button type=\"button\" className={className} \r\n            style={style} disabled={this._disabled}\r\n            onClick={()=>this._getId(this._id)}/>\r\n        )\r\n    }\r\n}","import React from \"react\";\r\nimport Cell from \"./Cell\";\r\nimport { connect } from 'react-redux';\r\n\r\nclass Field extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this._parameters = props.parameters;\r\n        this._cols = this._parameters.cols;\r\n        this._rows = this._parameters.rows;\r\n        this.state = {clickedCell: null, result: null};\r\n        this.getClicked = this.getClicked.bind(this);\r\n    }\r\n    getClicked(id) {\r\n        this.setState({\r\n            clickedCell: id,\r\n            result: (this.props.positions[1]===id) ? 'WIN' : 'Loose'\r\n        })\r\n    }\r\n    createCells() {\r\n        const positions = this.props.positions;\r\n        const cells = [];\r\n        for(let c=0;c<this._cols;c++) {\r\n            for(let r=0;r<this._rows;r++) {\r\n                const id=c+''+r;\r\n                let type = (positions && (id===positions[0])) ? 'cell_type_start' : '';\r\n                if((id===this.state.clickedCell))\r\n                {\r\n                    type = (positions && (id===positions[1])) ? 'cell_type_correct' : 'cell_type_wrong';\r\n                }\r\n                if((this.state.result==='Loose') && id===positions[1]) {\r\n                    type = 'cell_type_correct';\r\n                }\r\n                cells.push(<Cell \r\n                     x={c}\r\n                     y={r} \r\n                     key={id+type+this.state.result}\r\n                     id={id}\r\n                     type={type}\r\n                     getId={this.getClicked}\r\n                     disabled={this.state.result}/>)\r\n            }\r\n        }\r\n        return cells\r\n    }\r\n    componentDidUpdate() {\r\n        if((this.props.positions) && (this._positions)) {\r\n            (this._positions!==this.props.positions)&&this.restartGame()\r\n        }\r\n        this._positions = this.props.positions;\r\n    }\r\n    restartGame() {\r\n        this.setState({\r\n            clickedCell: null, \r\n            result: null\r\n        })\r\n    }\r\n    render() {\r\n        return(\r\n        <>\r\n            <div className='field'>\r\n                {this.createCells()}\r\n            </div>\r\n            {this.state.result&&(<h2 className=\"message\">{this.state.result}</h2>)}\r\n        </>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return state || {}\r\n  }\r\n\r\nexport default connect(mapStateToProps)(Field)","const startingParameters = {\r\n    cols: 3,\r\n    rows: 3,\r\n    moves: 10\r\n}\r\n\r\nexport {startingParameters}","const calculateNextStepVariants = (posId, parameters) => {\r\n    const x = +posId.slice(0,1);\r\n    const y = +posId.slice(1);\r\n    const variants=[];\r\n    const {cols, rows} = parameters;\r\n    const maxX = cols-1;\r\n    const maxY = rows-1;\r\n    switch(x) {\r\n        case 0: {\r\n            variants.push('RIGHT');\r\n            break;\r\n        }\r\n        case maxX: {\r\n            variants.push('LEFT');\r\n            break;\r\n        }\r\n        default: {\r\n            variants.push('RIGHT');\r\n            variants.push('LEFT');\r\n        }\r\n    };\r\n    switch(y) {\r\n        case 0: {\r\n            variants.push('DOWN');\r\n            break;\r\n        }\r\n        case maxY: {\r\n            variants.push('UP');\r\n            break;\r\n        }\r\n        default: {\r\n            variants.push('UP');\r\n            variants.push('DOWN');\r\n        }\r\n    };\r\n    return variants;\r\n}\r\n\r\nconst getRandomId = (parameters) => {\r\n    const x = Math.floor(Math.random() * parameters.cols);\r\n    const y = Math.floor(Math.random() * parameters.rows);\r\n    return x+''+y;\r\n}\r\n\r\n\r\nconst getNextStep = (posId, direction) => {\r\n    let x = +posId.slice(0,1);\r\n    let y = +posId.slice(1);\r\n    switch(direction) {\r\n        case 'UP': {\r\n            y--;\r\n            break;\r\n        }\r\n        case 'DOWN': {\r\n            y++;\r\n            break;\r\n        }\r\n        case 'RIGHT': {\r\n            x++;\r\n            break;\r\n        }\r\n        case 'LEFT': {\r\n            x--\r\n            break;\r\n        }\r\n        default: {\r\n            break\r\n        }\r\n    }\r\n    return x+''+y;\r\n}\r\n\r\n\r\nconst getRandomArrayVal = (array) => {\r\n    return array[Math.floor(Math.random() * array.length)];\r\n}\r\n\r\nexport {calculateNextStepVariants, getRandomId, getNextStep, getRandomArrayVal};","const setPositionData = (ids) => {\r\n    return {\r\n        payload: ids,\r\n        type: 'SET_POSITION_DATA'\r\n}};\r\n\r\nexport default setPositionData;","import React from \"react\";\r\nimport {calculateNextStepVariants, getRandomId, getNextStep, getRandomArrayVal} from \"../utils/utils\"\r\nimport {connect} from 'react-redux'\r\nimport setPositionData from '../store/actions/setPositionData';\r\nclass Moves extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this._parameters = props.parameters;\r\n        this._maxMoves = this._parameters.moves;\r\n        this.state = {\r\n            startingStep: '00',\r\n            stepsData: [],\r\n            finishStep: '00',\r\n        }\r\n        this._setPositionData = props.setPositionData\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.reDraw();\r\n    }\r\n\r\n    reDraw() {\r\n        let currentId = getRandomId(this._parameters);\r\n        this.setState({startingStep: currentId});\r\n        const stepsData = []\r\n        for(let i=0;i<this._maxMoves;i++) {\r\n            const nextStep = getRandomArrayVal(calculateNextStepVariants(currentId, this._parameters));\r\n            currentId = getNextStep(currentId, nextStep);\r\n            stepsData.push(nextStep)\r\n        }\r\n        this.setState({\r\n            stepsData: stepsData.slice(),\r\n            finishStep: currentId\r\n        });\r\n    }\r\n    componentDidUpdate() {\r\n        this._setPositionData([this.state.startingStep, this.state.finishStep]);\r\n    }\r\n    renderSteps() {\r\n        return this.state.stepsData.map((item, index)=>{\r\n            return <li key={index}>{index+1}. {item}</li>\r\n        })\r\n    }\r\n    render() {\r\n        return (<>\r\n        <ul className=\"moves-container\">\r\n            {this.renderSteps()}\r\n        </ul>\r\n        <button className='button-redraw' onClick={()=>this.reDraw()} type='button'>Перезапустить</button>\r\n        </>);\r\n    }\r\n}\r\n\r\nexport default connect(null, {setPositionData})(Moves);","import Field from './elements/Field';\nimport {startingParameters} from './utils/constants';\nimport './css/pages/index.css'\nimport Moves from './elements/Moves';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Field parameters={startingParameters}/>\n      <Moves parameters={startingParameters}/>\n    </div>\n  );\n}\n\nexport default App;\n","const setPositionDataReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'SET_POSITION_DATA': \r\n            return {\r\n                positions: action.payload};\r\n        default: \r\n            return state\r\n    }\r\n}\r\n\r\nexport default setPositionDataReducer;","import { createStore } from 'redux';\r\nimport setPositionDataReducer from './reducers/setPositionData';\r\nconst store = createStore(setPositionDataReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux'\nimport store from './store/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}